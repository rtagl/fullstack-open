{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","text","important","className","content","onClick","Notification","notification","message","style","color","Footer","fontStyle","fontSize","baseUrl","noteService","getAll","request","axios","get","fakeNote","id","date","Date","toISOString","then","response","data","concat","create","newObject","post","update","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","setNotification","useEffect","notesInDB","notesToShow","filter","onSubmit","e","preventDefault","length","Math","random","returnedNote","setTimeout","value","onChange","target","placeholder","type","map","find","n","changedNote","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88e53349.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const text = note.important ? \"not important\" : \"important\";\n  return (\n    <li className=\"note\">\n      {note.content} <button onClick={toggleImportance}>{text}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from \"react\";\n\nconst Notification = ({ notification }) => {\n  if (notification.message === null) {\n    return null;\n  } else {\n    return (\n      <div className=\"message\" style={{ color: notification.color }}>\n        {notification.message}\n      </div>\n    );\n  }\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2020\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const fakeNote = {\n    id: 10000,\n    content: \"this note doesnt exist\",\n    date: new Date().toISOString(),\n    important: true,\n  };\n  return request.then((response) => response.data.concat(fakeNote));\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst noteService = { getAll, create, update };\n\nexport default noteService;\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\nimport noteService from \"./services/notes\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [notification, setNotification] = useState({\n    message: null,\n    color: null,\n  });\n\n  useEffect(() => {\n    noteService.getAll().then((notesInDB) => {\n      setNotes(notesInDB);\n    });\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const note = {\n      id: notes.length + 1,\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n    noteService.create(note).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n      setNotification({\n        message: `${returnedNote.content} added`,\n        color: \"green\",\n      });\n      setTimeout(() => {\n        setNotification({ message: null, color: null });\n      }, 4000);\n    });\n  };\n\n  const handleNewNoteChange = (e) => {\n    setNewNote(e.target.value);\n  };\n\n  const handleToggleImportance = () => {\n    setShowAll(!showAll);\n  };\n\n  const toggleImportance = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) =>\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\n      )\n      .catch((error) => {\n        setNotification({\n          message: `the note \"${note.content}\" was already deleted`,\n          color: \"red\",\n        });\n        setNotes(notes.filter((n) => n.id !== id));\n        setTimeout(() => {\n          setNotification({ message: null, color: null });\n        }, 4000);\n      });\n  };\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification notification={notification} />\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input\n            value={newNote}\n            onChange={handleNewNoteChange}\n            placeholder=\"new note\"\n          />\n          <button type=\"submit\">add note</button>\n        </form>\n      </div>\n      <div>\n        <button onClick={handleToggleImportance}>\n          {showAll ? \"show important\" : \"show all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportance(note.id)}\n          />\n        ))}\n      </ul>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}